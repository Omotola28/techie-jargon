[{"/Users/omotolashogunle/Desktop/HashnodeHackaton/techie-jargon-booklet/src/index.js":"1","/Users/omotolashogunle/Desktop/HashnodeHackaton/techie-jargon-booklet/src/App.js":"2","/Users/omotolashogunle/Desktop/HashnodeHackaton/techie-jargon-booklet/src/components/TechieCard.js":"3","/Users/omotolashogunle/Desktop/HashnodeHackaton/techie-jargon-booklet/src/components/CategoryForm.js":"4","/Users/omotolashogunle/Desktop/HashnodeHackaton/techie-jargon-booklet/src/components/HomePage.js":"5","/Users/omotolashogunle/Desktop/HashnodeHackaton/techie-jargon-booklet/src/components/Header.js":"6","/Users/omotolashogunle/Desktop/HashnodeHackaton/techie-jargon-booklet/src/components/Badges.js":"7","/Users/omotolashogunle/Desktop/HashnodeHackaton/techie-jargon-booklet/src/helper/techCarouselHelper.js":"8","/Users/omotolashogunle/Desktop/HashnodeHackaton/techie-jargon-booklet/src/constants/requestState.js":"9","/Users/omotolashogunle/Desktop/HashnodeHackaton/techie-jargon-booklet/src/constants/externalLinks.js":"10"},{"size":220,"mtime":1612479242642,"results":"11","hashOfConfig":"12"},{"size":189,"mtime":1612719934413,"results":"13","hashOfConfig":"12"},{"size":796,"mtime":1614030668109,"results":"14","hashOfConfig":"12"},{"size":1966,"mtime":1612541329882,"results":"15","hashOfConfig":"16"},{"size":6893,"mtime":1614293684714,"results":"17","hashOfConfig":"12"},{"size":6602,"mtime":1614367069368,"results":"18","hashOfConfig":"12"},{"size":913,"mtime":1613950904954,"results":"19","hashOfConfig":"12"},{"size":686,"mtime":1614026717869,"results":"20","hashOfConfig":"12"},{"size":155,"mtime":1614299433478,"results":"21","hashOfConfig":"12"},{"size":422,"mtime":1614297136484,"results":"22","hashOfConfig":"12"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"qvn21h",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"1ufpxlm",{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/omotolashogunle/Desktop/HashnodeHackaton/techie-jargon-booklet/src/index.js",[],["47","48"],"/Users/omotolashogunle/Desktop/HashnodeHackaton/techie-jargon-booklet/src/App.js",[],"/Users/omotolashogunle/Desktop/HashnodeHackaton/techie-jargon-booklet/src/components/TechieCard.js",[],"/Users/omotolashogunle/Desktop/HashnodeHackaton/techie-jargon-booklet/src/components/CategoryForm.js",["49"],"import React, {useEffect, useState } from 'react'\n\nfunction CategoryForm(props) {\n\n    const [categories, setCategories] = useState([]);\n\n    const {handleSubmit, categoryEl, searchEl, onChangeHandler} = props;\n\n    const categoryObjectData = [\n        {\n            id: 0,\n            name: 'Category',\n        },\n        {\n          id: 1,\n          name: 'Tech Roles',\n        },\n        {\n          id: 2,\n          name: 'Programming Concepts',\n        },\n        {\n          id: 3,\n          name: 'Version control',\n        },\n        {\n          id: 4,\n          name: 'Programming Lingo',\n        },\n        {\n            id: 5,\n            name: 'Tools & Services',\n        },\n        {\n            id: 6,\n            name: 'Web Related',\n        },\n    ];\n\n\n    useEffect(() => {\n        setCategories(categoryObjectData);\n    }, [])\n\n\n    return (\n        <div>\n            <form className=\"form-header\" onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"category\"></label>\n                    <select id=\"category\" ref={categoryEl}>\n                        {categories.map(category => {\n                            return <option \n                                        value={category.name}\n                                        key={category.id}>{category.name}\n                                    </option>\n                        })}\n                    </select>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"search\"></label>\n                        <input \n                            onChange={onChangeHandler}\n                            type=\"text\" id=\"searchBox\" \n                            placeholder=\"Search Techie Word\"\n                            ref={searchEl}\n                            required\n                        />\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default CategoryForm\n",["50","51"],"/Users/omotolashogunle/Desktop/HashnodeHackaton/techie-jargon-booklet/src/components/HomePage.js",["52"],"import React, { useCallback, useState } from \"react\";\nimport algoliasearch from \"algoliasearch/lite\";\nimport {\n  InstantSearch,\n  Hits,\n  connectHits,\n  connectHighlight,\n  connectStateResults,\n} from \"react-instantsearch-dom\";\nimport TechieCard from \"./TechieCard\";\nimport Header from \"./Header\";\nimport \"./HomePage/HomePage.css\";\nimport { determineClasses, Illustration } from \"../helper/techCarouselHelper\";\nimport { BsFillCaretRightFill } from \"react-icons/bs\";\nimport Illustration1 from \"../resources/illustration-img-1.svg\";\nimport Illustration2 from \"../resources/illustration-img-2.svg\";\nimport Illustration3 from \"../resources/illustration-img-3.svg\";\n\nconst searchClient = algoliasearch(\n  \"HYNMEB36NP\",\n  \"bb1451a177778bc6f07bbf99fffe1622\"\n);\n\nconst Results = connectStateResults(\n  ({ searchState, searchResults, children }) =>\n    searchResults && searchResults.nbHits !== 0 ? (\n      children\n    ) : (\n      <div>No results have been found for {searchState.query}.</div>\n    )\n);\n\nfunction HomePage() {\n  const [lengthOfIndices, setIndicesLength] = useState(20);\n  // const [previousCardItems, setPreviousCardItems] = useState([]);\n  // const categoryEl = useRef();\n  // const searchEl = useRef();\n\n  // const { allTerms, readTerm } = api;\n\n  const [indexes, setIndexes] = useState({\n    previousIndex: 0,\n    currentIndex: 0,\n    nextIndex: 1,\n  });\n\n  // useEffect(() => {\n  //   // const fetchData = async () => {\n  //   //   const output = await axios.get(allTerms);\n  //   //   let termsInOneArray = [];\n  //   //   output.data.map(function (item) {\n  //   //     return termsInOneArray.push(item[\"item\"]);\n  //   //   });\n\n  //   //   setCardItems([].concat.apply([], termsInOneArray));\n  //   //   setPreviousCardItems([].concat.apply([], termsInOneArray));\n  //   // };\n\n  //   // fetchData();\n\n  // }, []);\n\n  const NoOfHits = ({ hits }) => (\n    <div className='noOfHits'>\n      {setIndicesLength(hits.length)}\n      {`Results:- ${hits.length}`}\n    </div>\n  );\n  const CustomHits = connectHits(NoOfHits);\n\n  // const filterTechTerms = async (categoryText, searchText, setCardItems) => {\n  //   const output = await axios.get(readTerm + categoryText);\n  //   console.log(readTerm + categoryText);\n  //   const termFound = Object.values(output[0]);\n  //   let terms = termFound.filter(function (item) {\n  //     return item.term === searchText;\n  //   });\n\n  //   setCardItems(terms);\n  // };\n\n  const handleCardForwardTransition = useCallback(() => {\n    // If we've reached the end, start again from the first card,\n    // but carry previous value over\n    console.log(indexes, lengthOfIndices);\n    if (indexes.currentIndex >= lengthOfIndices - 1) {\n      setIndexes({\n        previousIndex: lengthOfIndices - 1,\n        currentIndex: 0,\n        nextIndex: 1,\n      });\n    } else {\n      setIndexes((prevState) => ({\n        previousIndex: prevState.currentIndex,\n        currentIndex: prevState.currentIndex + 1,\n        nextIndex:\n          prevState.currentIndex + 2 === lengthOfIndices\n            ? 0\n            : prevState.currentIndex + 2,\n      }));\n    }\n  }, [indexes.currentIndex]);\n\n  // useEffect(() => {\n  //   const transitionInterval = setInterval(() => {\n  //     handleCardForwardTransition();\n  //   }, 4000); // The interval value could also be a prop\n\n  //   // Clear the interval when the component unmounts!\n  //   return () => clearInterval(transitionInterval);\n  // }, [handleCardForwardTransition, indexes]);\n\n  // function handleSearchTerm(e) {\n  //   e.preventDefault();\n\n  //   let categoryText = makeTextCompatible(categoryEl.current.value);\n  //   let searchText = searchEl.current.value.trim();\n\n  //   if (categoryText === \"category\") {\n  //     let terms = cardItems.filter(function (item) {\n  //       return item.term === searchText;\n  //     });\n\n  //     setCardItems(terms);\n  //   } else {\n  //     filterTechTerms(categoryText, searchText, setCardItems);\n  //   }\n  // }\n\n  // function makeTextCompatible(text) {\n  //   let betterText = text.includes(\"&\") ? text.replace(\"&\", \"and\") : text;\n\n  //   return betterText.split(\" \").join(\"\").toLowerCase();\n  // }\n\n  // function onChangeHandler() {\n  //   if (searchEl.current.value === \"\") {\n  //     setCardItems(previousCardItems);\n  //   }\n  // }\n\n  const Hit = ({ hit }) => <CustomHighlight attribute='term' hit={hit} />;\n\n  const CustomHighlight = connectHighlight(({ highlight, attribute, hit }) => {\n    const parsedHit = highlight({\n      highlightProperty: \"_highlightResult\",\n      attribute,\n      hit,\n    });\n\n    return (\n      <TechieCard\n        card={hit}\n        parsedHit={parsedHit}\n        determineClasses={determineClasses}\n        indexes={indexes}\n      />\n    );\n  });\n\n  return (\n    <>\n      <InstantSearch indexName='techterms' searchClient={searchClient}>\n        <Header\n          nbOfHits={CustomHits}\n          // categoryForm={\n          //   <CategoryForm\n          //     handleSubmit={handleSearchTerm}\n          //     categoryEl={categoryEl}\n          //     searchEl={searchEl}\n          //     onChangeHandler={onChangeHandler}\n          //   />\n          // }\n        />\n        <section className='grid-container'>\n          <Illustration\n            mainClass='row shape2'\n            illustration={Illustration2}\n            description='icon shape'\n            imgClassName='shape2-img'\n          />\n          <div className='main'>\n            <div className='row carousel'>\n              <ul className='card-carousel'>\n                {/* {cardItems.length === 0 ? (\n                <TechieCard notFound={true} />\n              ) : (\n                cardItems.map((card, index) => (\n                  <TechieCard\n                    card={card}\n                    determineClasses={determineClasses}\n                    indexes={indexes}\n                    index={index}\n                  />\n                ))\n              )} */}\n                <Results>\n                  <Hits hitComponent={Hit} />\n                </Results>\n                <CustomHits />\n                <BsFillCaretRightFill\n                  size={50}\n                  color='#2f2f2f'\n                  className='right-arrow btn'\n                  onClick={handleCardForwardTransition}\n                />\n              </ul>\n            </div>\n          </div>\n          <div className=\"sideBar2\">\n            <Illustration\n              mainClass='row bubbles'\n              illustration={Illustration3}\n              description='icon bubble'\n              imgClassName='bubbles-img'\n            />\n            <Illustration\n              mainClass='row shape3'\n              illustration={Illustration1}\n              description='icon shape'\n              imgClassName='shape3-img'\n              optionalDivStyle='div-img-wrapper'\n            />\n          </div>\n        </section>\n      </InstantSearch>\n    </>\n  );\n}\nexport default HomePage;\n","/Users/omotolashogunle/Desktop/HashnodeHackaton/techie-jargon-booklet/src/components/Header.js",[],"/Users/omotolashogunle/Desktop/HashnodeHackaton/techie-jargon-booklet/src/components/Badges.js",[],"/Users/omotolashogunle/Desktop/HashnodeHackaton/techie-jargon-booklet/src/helper/techCarouselHelper.js",[],"/Users/omotolashogunle/Desktop/HashnodeHackaton/techie-jargon-booklet/src/constants/requestState.js",[],"/Users/omotolashogunle/Desktop/HashnodeHackaton/techie-jargon-booklet/src/constants/externalLinks.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":43,"column":8,"nodeType":"59","endLine":43,"endColumn":10,"suggestions":"60"},{"ruleId":"53","replacedBy":"61"},{"ruleId":"55","replacedBy":"62"},{"ruleId":"57","severity":1,"message":"63","line":102,"column":6,"nodeType":"59","endLine":102,"endColumn":28,"suggestions":"64"},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'categoryObjectData'. Either include it or remove the dependency array.","ArrayExpression",["67"],["65"],["66"],"React Hook useCallback has missing dependencies: 'indexes' and 'lengthOfIndices'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setIndexes' needs the current value of 'lengthOfIndices'.",["68"],"no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},{"desc":"71","fix":"72"},"Update the dependencies array to be: [categoryObjectData]",{"range":"73","text":"74"},"Update the dependencies array to be: [indexes, lengthOfIndices]",{"range":"75","text":"76"},[841,843],"[categoryObjectData]",[3098,3120],"[indexes, lengthOfIndices]"]